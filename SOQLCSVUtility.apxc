public class SOQLCSVUtility {
    
     public String generateCSV(String query, String columns) {
        
        List<SObject> sobjects = database.query(query);
        List<String> fieldNames = new List<String>();
        String csvReport = '';
        
        query = query.toUpperCase();
        
        String fieldNameString = query.substringAfter('SELECT ');
        fieldNameString = fieldNameString.substringBefore(' FROM');
        
        fieldNames = fieldNameString.split(',');
        
        if(columns == null) {
            columns = fieldNameString;
        }
        
        csvReport += columns + '\r\n';
        
        for(Sobject s :sobjects) {
            for(String fn :fieldNames) {
                csvReport += '"' + s.get(fn) + '"' + ',';
            }
            csvReport += '\r\n';
        }
        
        return csvReport;
    }
    
     public void sendEmail(Blob resultCSV, String contactId, String queryString) {
         
        String sObjectName = queryString.substringAfter('FROM ');
        sObjectName = sObjectName.substringBefore(' WHERE');
                
        //send email code
        Messaging.reserveSingleEmailCapacity(1);
        List<Messaging.EmailFileAttachment> atts = new List<Messaging.EmailFileAttachment>();
        Messaging.EmailFileAttachment att = new Messaging.EmailFileAttachment();
        
        //attachment
        att.setBody(resultCSV);
        att.setContentType('text/csv');
        att.setFileName('report.csv');
        att.setInline(false);
        atts.add(att);
        
        //email msg
        Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
        mail.setsaveAsActivity(false);
        mail.setUseSignature(false);
        mail.setTargetObjectId(contactId);
        mail.setPlainTextBody('Attached is a report on ' + sobjectName);
        mail.setHTMLBody('Attached is a report on ' + sobjectName + '<br />' + 
                         'with critera ' + queryString);
        mail.setFileAttachments(atts);
        
        // send the email
        Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
        
    }

}
